row.names(speeches) <- speeches$doc_id
speechescorpus <- corpus(speeches, text_field = "text")
#add them together
corpus <- strategycorpus+observercorpus+speechescorpus
dfm <- tokens(corpus) %>%
tokens_remove("\\p{P}", valuetype = "regex", padding = TRUE) %>%
tokens_remove("\\p{N}", valuetype = "regex", padding = TRUE) %>%
tokens_remove("\\p{S}", valuetype = "regex", padding = TRUE) %>%
tokens_remove(stopwords("english"), padding  = TRUE) %>%
tokens_ngrams(n = 1:2, concatenator = " ") %>%
dfm(verbose=FALSE)
dfm<-dfm_remove(dfm, c("also", "as well", "arctic", "council", "arctic council", "cooperation"))
df <- as.data.frame(dfm)
strategydf <- unnest_tokens(strategy, word, text)
observerdf <- unnest_tokens(observer, word, text)
speechesdf <- unnest_tokens(speeches, word, text)
totaldf <- strategydf %>%
full_join(observerdf) %>%
full_join(speechesdf)
words <- totaldf %>%
group_by(doc_id) %>%
mutate(length=n()) %>%
ungroup()
words <- words %>%
mutate(doc_id2=doc_id) %>%
separate(doc_id2, c("country", "misc"), sep = "_")
environment <- data.frame(c("Research", "science/scientific/scientist", "environment","climate","climate change","ocean","sea","sea level","atmosphere","air","ice","warm","melt","knowledge","station","base","glaciological","geological","biological","ecosystem","paleoclimate","laboratory","institution","conservation","preservation","temperature","data","measurement","study","precipitation","pollution","cryospheric","publication","biodiversity","academic", "glacier","disaster","observe","trend","predict","species","force","global warming","protect" ))
colnames(environment) <- "topic"
indigenous <- data.frame(c("nation", "local", "indigenous", "peoples", "community", "human", "social", "lives", "condition", "inhabitants", "well-being", "language", "health", "traditional", "culture", "rural", "residents"))
colnames(indigenous) <- "topic"
transport <- data.frame(c("transportation", "shipping", "import", "export", "maritime", "transport", "ship", "vessel", "navigation", "route", "channel", "northeast passage", "northwest passage", "northern sea route", "voyage", "commercial", "trade", "icebreakers", "water", "transit"))
colnames(transport) <- "topic"
development <- data.frame(c("Sustainable","development","economic","globalization","economic zones","commercial","production","strategy","benefit","capital","market","enterprise","opportunity","business","infrastructure","fund","industry"))
colnames(development) <- "topic"
tourism <- data.frame(c("tourism","tourists","rescue","ecotourism"))
colnames(tourism) <- "topic"
resources <- data.frame(c("oil","industrial/industry","resource","technology","energy","gas","carbon","infrastructure","build","exploit","mine","utilization","exploitation","natural","mineral","geothermal","wind","exploration","consumer","pipeline","extraction"))
colnames(resources) <- "topic"
fisheries <- data.frame(c("fish","fisheries","fishing","aquaculture","goods"))
colnames(fisheries) <- "topic"
diplomacy <- data.frame(c("strengthen","joint","relationship","peace","integration","cooperation","international","relations","diplomatic","contribute","parties","stability","equality","participants","connect","multilateral","bilateral","regional","global","coalition","collaboration","coordination","share","same","affairs","harmony","alliance","partnership","freedom","political","meet"))
colnames(diplomacy) <- "topic"
security <- data.frame(c("sovereignty","continentalshelf","State","nation","secure/security","stakeholder","governance","rule","UNCLOS","claim","jurisdiction","rights","interests","territory","zone","own","influence","spitsbergen","role","legal","law","just","treaties","treaty","military","defend/defense","position","independent","regulation"))
colnames(security) <- "topic"
russia <- data.frame(c("russia"))
colnames(russia) <- "topic"
countwords <- function(topic) {
test <- words %>%
inner_join(topic, by= c("word" = "topic")) %>%
group_by(country) %>%
summarize(count = n(), doclength=mean(length), score=count/doclength)
}
environment_scores <- countwords(environment)
ggplot(environment_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
indigenous_scores <- countwords(indigenous)
ggplot(indigenous_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
transport_scores <- countwords(transport)
ggplot(transport_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
development_scores <- countwords(development)
ggplot(development_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
tourism_scores <- countwords(tourism)
ggplot(tourism_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
resources_scores <- countwords(resources)
ggplot(resources_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
fisheries_scores <- countwords(fisheries)
ggplot(fisheries_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
diplomacy_scores <- countwords(diplomacy)
ggplot(diplomacy_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
security_scores <- countwords(security)
ggplot(security_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
russia_scores <- countwords(russia)
ggplot(russia_scores, aes(x=reorder(country,score), y=score)) + geom_point() + coord_flip()
library(igraph)
library(tidyverse)
library(tidytext)
library(readtext)
library(quanteda)
library(dplyr)
library(stringr)
library(plotly)
library(rworldmap)
#unnest the tokens (words) and create a new data frame with each word as one row
strategydf <- unnest_tokens(strategy, word, text)
install.packages("rworldmap")
library(igraph)
library(tidyverse)
library(tidytext)
library(readtext)
library(quanteda)
library(dplyr)
library(stringr)
library(plotly)
library(rworldmap)
#This sets the directory where the texts are located
DATA_DIR <- "/Users/sallymackenzie//Desktop/Arctic/Strategy Documents (new)"
#This command reads in all the file names and stores the texts in a tidy dataframe
strategy <- readtext(paste0(DATA_DIR, "/*"))
#This identifies the row names of the dataframe, which are also used in the corpus
#Note that these docnames are not as nice as for the UN Corpus as they vary a bit
row.names(strategy) <- strategy$doc_id
#Do again for the other folder
DATA_DIR <- "/Users/sallymackenzie//Desktop/Arctic/Observer Documents"
observer <- readtext(paste0(DATA_DIR, "/*"))
row.names(observer) <- observer$doc_id
#Third folder
DATA_DIR <- "/Users/sallymackenzie//Desktop/Arctic/Arctic Speeches"
speeches <- readtext(paste0(DATA_DIR, "/*"))
row.names(speeches) <- speeches$doc_id
#Fourth folder
DATA_DIR <- "/Users/sallymackenzie//Desktop/Arctic/Official Speeches and Documents"
officialspeeches <- readtext(paste0(DATA_DIR, "/*"))
row.names(officialspeeches) <- officialspeeches$doc_id
#unnest the tokens (words) and create a new data frame with each word as one row
strategydf <- unnest_tokens(strategy, word, text)
observerdf <- unnest_tokens(observer, word, text)
speechesdf <- unnest_tokens(speeches, word, text)
officialspeechesdf <- unnest_tokens(officialspeeches, word, text)
#combine the three data frames
totaldf <- strategydf %>%
full_join(observerdf) %>%
full_join(speechesdf) %>%
full_join(officialspeechesdf)
#calculate the document lengths
words <- totaldf %>%
group_by(doc_id) %>%
mutate(length=n()) %>%
ungroup()
#separate the doc_id into country and everything that follows
words <- words %>%
mutate(doc_id2=doc_id) %>%
separate(doc_id2, c("country", "misc"), sep = "_")
environment <- data.frame(c("research", "science/scientific/scientist", "environment","climate","climate change","ocean","sea","sea level","atmosphere","air","ice","warm","melt","knowledge","station","base","glaciological","geological","biological","ecosystem","paleoclimate","laboratory","institution","conservation","preservation","temperature","data","measurement","study","precipitation","pollution","cryospheric","publication","biodiversity","academic", "glacier","disaster","observe","trend","predict","species","force","global warming","protect" ))
colnames(environment) <- "topic"
environment <- mutate(environment, name = "environment")
indigenous <- data.frame(c("nation", "local", "indigenous", "peoples", "community", "human", "social", "lives", "condition", "inhabitants", "well-being", "language", "health", "traditional", "culture", "rural", "residents"))
colnames(indigenous) <- "topic"
indigenous <- mutate(indigenous, name = "indigenous")
transport <- data.frame(c("transportation", "shipping", "import", "export", "maritime", "transport", "ship", "vessel", "navigation", "route", "channel", "northeast passage", "northwest passage", "northern sea route", "voyage", "commercial", "trade", "icebreakers", "water", "transit"))
colnames(transport) <- "topic"
transport <- mutate(transport, name = "transport")
development <- data.frame(c("Sustainable","development","economic","globalization","economic zones","commercial","production","strategy","benefit","capital","market","enterprise","opportunity","business","infrastructure","fund","industry"))
colnames(development) <- "topic"
development <- mutate(development, name = "development")
tourism <- data.frame(c("tourism","tourists","rescue","ecotourism"))
colnames(tourism) <- "topic"
tourism <- mutate(tourism, name = "tourism")
resources <- data.frame(c("oil","industrial/industry","resource","technology","energy","gas","carbon","infrastructure","build","exploit","mine","utilization","exploitation","natural","mineral","geothermal","wind","exploration","consumer","pipeline","extraction"))
colnames(resources) <- "topic"
resources <- mutate(resources, name = "resources")
fisheries <- data.frame(c("fish","fisheries","fishing","aquaculture","goods"))
colnames(fisheries) <- "topic"
fisheries <- mutate(fisheries, name = "fisheries")
diplomacy <- data.frame(c("strengthen","joint","relationship","peace","integration","cooperation","international","relations","diplomatic","contribute","parties","stability","equality","participants","connect","multilateral","bilateral","regional","global","coalition","collaboration","coordination","share","same","affairs","harmony","alliance","partnership","freedom","political","meet"))
colnames(diplomacy) <- "topic"
diplomacy <- mutate(diplomacy, name = "diplomacy")
security <- data.frame(c("sovereignty", "state", "nation", "secure", "security", "stakeholder", "governance", "claim", "interests", "territory", "zone", "own", "influence", "military", "defend", "defense", "position", "independent"))
colnames(security) <- "topic"
security <- mutate(security, name = "security")
russia <- data.frame(c("russia"))
colnames(russia) <- "topic"
russia <- mutate(russia, name = "russia")
china <- data.frame(c("china"))
colnames(china) <- "topic"
china <- mutate(china, name = "china")
legal <- data.frame(c("continental shelf", "rule", "UNCLOS", "jurisdiction", "rights", "spitsbergen", "legal", "law", "just", "treaty", "treaties", "regulation"))
colnames(legal) <- "topic"
legal <- mutate(legal, name = "legal")
#defining a function to calculate the scores
# first count the words belonging to each topic in each document and create document score by dividing the count by the length of the document
countwords <- function(topic) {
docscores <- words %>%
inner_join(topic, by= c("word" = "topic")) %>%
group_by(doc_id) %>%
mutate(count = n(), doclength=mean(length), score=count/doclength) %>%
ungroup()
#calculating country scores by averaging document scores
countryscores <- docscores %>%
group_by(country) %>%
summarize(country_score = mean(score)) %>%
mutate(name =topic$name[1] )
}
#Environment
#calcualte scores
environment_scores <- countwords(environment)
#plot
p.environment <- ggplot(environment_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Environment")
#make interactive
ggplotly(p.environment)
#Indigenous
indigenous_scores <- countwords(indigenous)
p.indigenous <- ggplot(indigenous_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Indigenous")
ggplotly(p.indigenous)
#Transport
transport_scores <- countwords(transport)
p.transport <- ggplot(transport_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("transport")
ggplotly(p.transport)
#Development
development_scores <- countwords(development)
p.development <- ggplot(development_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Development")
ggplotly(p.development)
#Tourism
tourism_scores <- countwords(tourism)
p.tourism <- ggplot(tourism_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Tourism")
ggplotly(p.tourism)
#Resources
resources_scores <- countwords(resources)
p.resources <- ggplot(resources_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Resources")
ggplotly(p.resources)
#Fisheries
fisheries_scores <- countwords(fisheries)
p.fisheries <- ggplot(fisheries_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Fisheries")
ggplotly(p.fisheries)
#Diplomacy
diplomacy_scores <- countwords(diplomacy)
p.diplomacy <- ggplot(diplomacy_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Diplomacy")
ggplotly(p.diplomacy)
#Security
security_scores <- countwords(security)
p.security <- ggplot(security_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Security")
ggplotly(p.security)
#Russia
russia_scores <- countwords(russia)
p.russia <- ggplot(russia_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Russia")
ggplotly(p.russia)
#China
china_scores <- countwords(china)
p.china <- ggplot(china_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("China")
ggplotly(p.china)
#legal
legal_scores <- countwords(legal)
p.legal <- ggplot(legal_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Legal")
ggplotly(p.legal)
countrydf <- environment_scores %>%
full_join(indigenous_scores) %>%
full_join(transport_scores)  %>%
full_join(development_scores) %>%
full_join(tourism_scores) %>%
full_join(resources_scores) %>%
full_join(fisheries_scores) %>%
full_join(diplomacy_scores) %>%
full_join(security_scores) %>%
full_join(russia_scores) %>%
full_join(china_scores) %>%
full_join(legal_scores)
countrygraph <- function(country.name) {
countrydf2 <- filter(countrydf, country==country.name)
ggplot(countrydf2, aes(x=name, y=country_score)) + geom_bar(stat="identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_x_discrete(country.name)
}
countrygraph("Canada")
countrygraph("China")
countrygraph("Denmark")
countrygraph("Finland")
countrygraph("France")
countrygraph("Germany")
countrygraph("Greenland")
countrygraph("Iceland")
countrygraph("India")
countrygraph("Italy")
countrygraph("Japan")
countrygraph("Korea")
countrygraph("Netherlands")
countrygraph("Norway")
countrygraph("Poland")
countrygraph("Russia")
countrygraph("Singapore")
countrygraph("Spain")
countrygraph("Sweden")
countrygraph("Switzerland")
countrygraph("UK")
countrygraph("US")
scoremean <- mean(countrydf$country_score)
scoresd <- sd(countrydf$country_score)
countrydf <- countrydf %>%
mutate(sdmean = (country_score-scoremean)/scoresd)
scoresq <- quantile(countrydf$sdmean, probs = c(0, 0.25, 0.5, 0.75, 1))
countrydf <- countrydf  %>%
mutate(rank = ifelse(sdmean < scoresq[2], "very low",
ifelse(sdmean>scoresq[2] & sdmean < scoresq[3], "low",
ifelse(sdmean>scoresq[3] & sdmean < scoresq[4], "medium", "high"))))
cleantable <- countrydf %>% spread(name, rank) %>%
select(country, china:transport)  %>%
group_by(country) %>%
arrange(country, china, development, diplomacy, environment, fisheries, indigenous, legal, resources)
cleantable
scoremean <- mean(countrydf$country_score)
scoresd <- sd(countrydf$country_score)
countrydf <- countrydf %>%
mutate(sdmean = (country_score-scoremean)/scoresd)
scoresq <- quantile(countrydf$sdmean, probs = c(0, 0.25, 0.5, 0.75, 1))
countrydf <- countrydf  %>%
mutate(rank = ifelse(sdmean < scoresq[2], "very low",
ifelse(sdmean>scoresq[2] & sdmean < scoresq[3], "low",
ifelse(sdmean>scoresq[3] & sdmean < scoresq[4], "medium", "high"))))
cleantable <- countrydf %>% spread(name, rank) %>%
select(country, china:transport)  %>%
group_by(country) %>%
arrange(country, china, development, diplomacy, environment, fisheries, indigenous, legal, resources)
cleantable
cleantable
library(igraph)
library(tidyverse)
library(tidytext)
library(readtext)
library(quanteda)
library(dplyr)
library(stringr)
library(plotly)
library(rworldmap)
library(ngram)
install.packages("ngram")
library(igraph)
library(tidyverse)
library(tidytext)
library(readtext)
library(quanteda)
library(dplyr)
library(stringr)
library(plotly)
library(rworldmap)
library(ngram)
#This sets the directory where the texts are located
DATA_DIR <- "/Users/sallymackenzie/Desktop/Arctic/Strategy Documents (new)"
#This command reads in all the file names and stores the texts in a tidy dataframe
strategy <- readtext(paste0(DATA_DIR, "/*"))
#This identifies the row names of the dataframe, which are also used in the corpus
#Note that these docnames are not as nice as for the UN Corpus as they vary a bit
row.names(strategy) <- strategy$doc_id
#Do again for the other folder
DATA_DIR <- "C/Users/sallymackenzie/Desktop/Arctic/Observer Documents"
observer <- readtext(paste0(DATA_DIR, "/*"))
library(igraph)
library(tidyverse)
library(tidytext)
library(readtext)
library(quanteda)
library(dplyr)
library(stringr)
library(plotly)
library(rworldmap)
library(ngram)
#This sets the directory where the texts are located
DATA_DIR <- "/Users/sallymackenzie/Desktop/Arctic/Strategy Documents (new)"
#This command reads in all the file names and stores the texts in a tidy dataframe
strategy <- readtext(paste0(DATA_DIR, "/*"))
#This identifies the row names of the dataframe, which are also used in the corpus
#Note that these docnames are not as nice as for the UN Corpus as they vary a bit
row.names(strategy) <- strategy$doc_id
#Do again for the other folder
DATA_DIR <- "/Users/sallymackenzie/Desktop/Arctic/Observer Documents"
observer <- readtext(paste0(DATA_DIR, "/*"))
row.names(observer) <- observer$doc_id
#Third folder
DATA_DIR <- "/Users/sallymackenzie/Desktop/Arctic/Arctic Speeches"
speeches <- readtext(paste0(DATA_DIR, "/*"))
row.names(speeches) <- speeches$doc_id
#Fourth folder
DATA_DIR <- "/Users/sallymackenzie/Desktop/Arctic/Official Speeches and Documents"
officialspeeches <- readtext(paste0(DATA_DIR, "/*"))
row.names(officialspeeches) <- officialspeeches$doc_id
#unnest the tokens (words) and create a new data frame with each word as one row
strategydf <- unnest_tokens(strategy, word, text)
observerdf <- unnest_tokens(observer, word, text)
speechesdf <- unnest_tokens(speeches, word, text)
officialspeechesdf <- unnest_tokens(officialspeeches, word, text)
#combine full text versions
fulltexts <- strategy %>%
full_join(observer) %>%
full_join(speeches) %>%
full_join(officialspeeches)
#combine the three data frames
totaldf <- strategydf %>%
full_join(observerdf) %>%
full_join(speechesdf) %>%
full_join(officialspeechesdf)
#calculate the document lengths
words <- totaldf %>%
group_by(doc_id) %>%
mutate(length=n()) %>%
ungroup()
#separate the doc_id into country and everything that follows
words <- words %>%
mutate(doc_id2=doc_id) %>%
separate(doc_id2, c("country", "misc"), sep = "_")
#the same for full text
fulltexts <- fulltexts %>%
mutate(doc_id2=doc_id) %>%
separate(doc_id2, c("country", "misc"), sep = "_")
environment <- data.frame(c("research", "science/scientific/scientist", "environment","climate","climate change","ocean","sea","sea level","atmosphere","air","ice","warm","melt","knowledge","station","glaciological","geological","biological","ecosystem","paleoclimate","laboratory","conservation","preservation","temperature","data","measurement","study","precipitation","pollution","cryospheric","publication","biodiversity","academic", "glacier","disaster","observe","trend","predict","species","force","global warming","protect" ))
colnames(environment) <- "topic"
environment <- mutate(environment, name = "environment")
indigenous <- data.frame(c("nation", "local", "indigenous", "peoples", "community", "human", "social", "lives", "condition", "inhabitants", "well-being", "language", "health", "traditional", "culture", "rural", "residents"))
colnames(indigenous) <- "topic"
indigenous <- mutate(indigenous, name = "indigenous")
transport <- data.frame(c("transportation", "shipping", "import", "export", "maritime", "transport", "ship", "vessel", "navigation", "route", "channel", "northeast passage", "northwest passage", "northern sea route", "voyage", "commercial", "trade", "icebreakers", "water", "transit"))
colnames(transport) <- "topic"
transport <- mutate(transport, name = "transport")
development <- data.frame(c("Sustainable","development","economic","globalization","economic zones","commercial","production","strategy","benefit","capital","market","enterprise","opportunity","business","infrastructure","fund","industry"))
colnames(development) <- "topic"
development <- mutate(development, name = "development")
tourism <- data.frame(c("tourism","tourists","rescue","ecotourism"))
colnames(tourism) <- "topic"
tourism <- mutate(tourism, name = "tourism")
resources <- data.frame(c("oil","industrial/industry","resource","technology","energy","gas","carbon","infrastructure","build","exploit","mine","utilization","exploitation","natural","mineral","geothermal","wind","exploration","consumer","pipeline","extraction", "seabed", "metal", "metals", "seafloor", "offshore"))
colnames(resources) <- "topic"
resources <- mutate(resources, name = "resources")
fisheries <- data.frame(c("fish","fisheries","fishing","aquaculture","goods"))
colnames(fisheries) <- "topic"
fisheries <- mutate(fisheries, name = "fisheries")
diplomacy <- data.frame(c("strengthen","joint","relationship","peace","integration","cooperation","international","relations","diplomatic","contribute","parties","stability","equality","participants","connect","multilateral","bilateral","regional","global","coalition","collaboration","coordination","share","same","affairs","harmony","alliance","partnership","freedom","political","meet"))
colnames(diplomacy) <- "topic"
diplomacy <- mutate(diplomacy, name = "diplomacy")
security <- data.frame(c("sovereignty", "state", "nation", "secure", "security", "stakeholder", "governance", "claim", "interests", "territory", "zone", "own", "influence", "military", "defend", "defense", "position", "independent"))
colnames(security) <- "topic"
security <- mutate(security, name = "security")
russia <- data.frame(c("russia"))
colnames(russia) <- "topic"
russia <- mutate(russia, name = "russia")
china <- data.frame(c("china"))
colnames(china) <- "topic"
china <- mutate(china, name = "china")
legal <- data.frame(c("continental shelf", "rule", "UNCLOS", "jurisdiction", "rights", "spitsbergen", "legal", "law", "just", "treaty", "treaties", "regulation", "boundary", "boundaries", "delimitation", "EEZ", "arbitration", "court", "ICJ", "ruling", "protocol", "reservation", "convention", "contiguous zone", "right", "ratification", "ratified"))
colnames(legal) <- "topic"
legal <- mutate(legal, name = "legal")
#defining a function to calculate the scores
# first count the words belonging to each topic in each document and create document score by dividing the count by the length of the document
countwords <- function(topic) {
docscores <- words %>%
inner_join(topic, by= c("word" = "topic")) %>%
group_by(doc_id) %>%
mutate(count = n(), doclength=mean(length), score=count/doclength) %>%
ungroup()
#calculating country scores by averaging document scores
countryscores <- docscores %>%
group_by(country) %>%
summarize(country_score = mean(score)) %>%
mutate(name =topic$name[1] )
}
#Environment
#calcualte scores
environment_scores <- countwords(environment)
#plot
p.environment <- ggplot(environment_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Environment")
#make interactive
ggplotly(p.environment)
#Indigenous
indigenous_scores <- countwords(indigenous)
p.indigenous <- ggplot(indigenous_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Indigenous")
ggplotly(p.indigenous)
#Transport
transport_scores <- countwords(transport)
p.transport <- ggplot(transport_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("transport")
ggplotly(p.transport)
#Development
development_scores <- countwords(development)
p.development <- ggplot(development_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Development")
ggplotly(p.development)
#Tourism
tourism_scores <- countwords(tourism)
p.tourism <- ggplot(tourism_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Tourism")
ggplotly(p.tourism)
#Resources
resources_scores <- countwords(resources)
p.resources <- ggplot(resources_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Resources")
ggplotly(p.resources)
#Fisheries
fisheries_scores <- countwords(fisheries)
p.fisheries <- ggplot(fisheries_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Fisheries")
ggplotly(p.fisheries)
#Diplomacy
diplomacy_scores <- countwords(diplomacy)
p.diplomacy <- ggplot(diplomacy_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Diplomacy")
ggplotly(p.diplomacy)
#Security
security_scores <- countwords(security)
p.security <- ggplot(security_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Security")
ggplotly(p.security)
#Russia
russia_scores <- countwords(russia)
p.russia <- ggplot(russia_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Russia")
ggplotly(p.russia)
#China
china_scores <- countwords(china)
p.china <- ggplot(china_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("China")
ggplotly(p.china)
#legal
legal_scores <- countwords(legal)
p.legal <- ggplot(legal_scores, aes(x=reorder(country,country_score), y=country_score)) + geom_point() + coord_flip() +
ggtitle("Legal")
ggplotly(p.legal)
